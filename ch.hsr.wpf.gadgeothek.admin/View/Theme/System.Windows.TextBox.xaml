<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:ch.hsr.wpf.gadgeothek.admin.View.Theme"
                    xmlns:shadow="clr-namespace:ch.hsr.wpf.gadgeothek.admin.View.Control.Shadow"
                    xmlns:animation="clr-namespace:ch.hsr.wpf.gadgeothek.admin.View.Control.Animation">
    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="SelectionBrush" Value="{StaticResource PrimaryFocusBrush}" />
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryNormalBrush}" />
        <Setter Property="Foreground" Value="{StaticResource MarkerBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Padding" Value="8 10 8 9" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="CaretBrush" Value="{StaticResource MarkerBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="IsTabStop" Value="True" />

        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="theme:ThemeProperties.ShadowDepth" Value="Depth1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <!-- Shadow -->
                    <shadow:Shadow x:Name="Shadow" ShadowDepth="{TemplateBinding theme:ThemeProperties.ShadowDepth}">
                        <Grid>
                            <!-- Border -->
                            <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{StaticResource CornerRadius}" />

                            <Border x:Name="BorderFocus"
                                    Background="Transparent"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource PrimaryFocusBrush}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    Opacity="0" />

                            <Border x:Name="BorderReadonly"
                                    Background="Transparent"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource DisabledBrush}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    Visibility="Collapsed" />

                            <Border x:Name="BorderInvalid"
                                    Background="Transparent"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource InvalidBrush}"
                                    CornerRadius="{StaticResource CornerRadius}"
                                    Opacity="0" />

                            <!-- The real Content of the TextBox (The text, x:Name must be "PART_ContentHost" because of behind laying code). -->
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="{TemplateBinding BorderThickness}"
                                          Padding="{TemplateBinding Padding}"
                                          Foreground="{TemplateBinding Foreground}"
                                          BorderBrush="Transparent"
                                          BorderThickness="0"
                                          Background="Transparent"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </shadow:Shadow>

                    <!-- Animation happens here -->
                    <ControlTemplate.Triggers>
                        <!-- readOnly -->
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="BorderReadonly" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{StaticResource SecondaryOpacity}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderReadonly" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{StaticResource DisabledOpacity}" />
                        </Trigger>
                        <!-- Focus -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="{StaticResource Control_AnimationDuration}"
                                            Storyboard.TargetProperty="Opacity"
                                            Storyboard.TargetName="BorderFocus"
                                            To="1">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="{StaticResource Control_AnimationDuration}"
                                            Storyboard.TargetProperty="Opacity"
                                            Storyboard.TargetName="BorderFocus"
                                            To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <!-- Validation -->
                        <Trigger Property="Validation.HasError" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="{StaticResource Control_AnimationDuration}"
                                            Storyboard.TargetProperty="Opacity"
                                            Storyboard.TargetName="BorderInvalid"
                                            To="1">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="{StaticResource Control_AnimationDuration}"
                                            Storyboard.TargetProperty="Opacity"
                                            Storyboard.TargetName="BorderInvalid"
                                            To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Just override the default ErrorTemplate -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="Placeholder" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Add ErrorContent to the tooltip -->
        <Style.Triggers>
            <Trigger Property="Validation.HasError"
                     Value="True">
                <Setter Property="ToolTip"
                        Value="{Binding RelativeSource=
                              {x:Static RelativeSource.Self},
                              Path=(Validation.Errors).CurrentItem.ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Apply the "TextBoxStyle" on every button. -->
    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}" />

</ResourceDictionary>