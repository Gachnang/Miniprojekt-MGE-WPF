<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ch.hsr.wpf.gadgeothek.admin.Theme">

  

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="SelectionBrush" Value="{StaticResource PrimaryFocusBrush}" />

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryNormalBrush}" />
        <Setter Property="Foreground" Value="{StaticResource MarkerBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8 10 8 9" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize}" />
        <Setter Property="CaretBrush" Value="{StaticResource MarkerBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!--
    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationTooltipTemplate}"/>
    -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <!-- OuterBorder (Blue(Default) line around the button) -->
                    <Border x:Name="OuterBorder"
                            Background="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{StaticResource Control_OuterBorder_CornerRadius}">
                        <!-- InnerBorder (White line inside the button) -->
                        <Border x:Name="InnerBorder"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{StaticResource BorderThickness}"
                                BorderBrush="{StaticResource DividerBrush}"
                                CornerRadius="{StaticResource Control_InnerBorder_CornerRadius}">
                            <Grid>
                                <!-- "AnimationBorder" when textBox is focused / valid / invalid: Grow and shrink again.  -->
                                    <Border x:Name="AnimationBorder"
                                             HorizontalAlignment="Stretch"
                                             VerticalAlignment="Stretch"
                                             Opacity="0"
                                            Margin="-1"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="3"
                                            BorderBrush="{StaticResource DividerBrush}"
                                            CornerRadius="{StaticResource Control_InnerBorder_CornerRadius}"/>

                                <!-- The real Content of the TextBox (The text, x:Name must be "PART_ContentHost" because of behind laying code). -->
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Margin="{TemplateBinding BorderThickness}"
                                              Padding="{TemplateBinding Padding}"
                                              Foreground="{TemplateBinding Foreground}"
                                              BorderBrush="Transparent"
                                              BorderThickness="0"
                                              Background="Transparent"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            </Grid>
                        </Border>
                        <!-- Animation happens here -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <!-- Set time for the animation -->
                                    <VisualTransition GeneratedDuration="{StaticResource Control_AnimationDuration}" />
                                </VisualStateGroup.Transitions>

                                <!-- When nothing happens on the button -->
                                <VisualState x:Name="Normal">
                                  <Storyboard AutoReverse="True">
                                        <ColorAnimation AutoReverse="True"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            Storyboard.TargetName="InnerBorder"
                                            To="{TemplateBinding Background}" />
                                    </Storyboard>
                                </VisualState>

                                <!-- When hover on the button -->
                              <VisualState x:Name="MouseOver">
                                <!--
                                <Storyboard AutoReverse="True">
                                  <ColorAnimation
                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                      Storyboard.TargetName="InnerBorder"
                                      To="Aquamarine" />
                                </Storyboard>
                                -->
                              </VisualState>

                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="ReadOnly"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                  <VisualTransition From="Unfocused" To="Focused" GeneratedDuration="{StaticResource Control_AnimationDuration}" >
                                    <Storyboard FillBehavior="HoldEnd">
                                      <ThicknessAnimationUsingKeyFrames
                                          Storyboard.TargetProperty="BorderThickness"
                                          Storyboard.TargetName="AnimationBorder"
                                          FillBehavior="HoldEnd">
                                        <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                        <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="3">
                                          <EasingThicknessKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseIn" />
                                          </EasingThicknessKeyFrame.EasingFunction>
                                        </EasingThicknessKeyFrame>
                                        <EasingThicknessKeyFrame KeyTime="0:0:0.6" Value="0">
                                          <EasingThicknessKeyFrame.EasingFunction>
                                                  <SineEase EasingMode="EaseOut" />
                                              </EasingThicknessKeyFrame.EasingFunction>
                                          </EasingThicknessKeyFrame>
                                      </ThicknessAnimationUsingKeyFrames>
                                      <DoubleAnimationUsingKeyFrames
                                          Storyboard.TargetProperty="Opacity"
                                          Storyboard.TargetName="AnimationBorder"
                                          FillBehavior="HoldEnd">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                                          <EasingDoubleKeyFrame.EasingFunction>
                                            <SineEase EasingMode="EaseOut" />
                                          </EasingDoubleKeyFrame.EasingFunction>
                                        </EasingDoubleKeyFrame>
                                      </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                  </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Apply the "TextBoxStyle" on every button. -->
    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}" />

</ResourceDictionary>